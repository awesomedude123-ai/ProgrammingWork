<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">&#x0A;<refactoring comment="Extract local variable &apos;collect&apos; from expression &apos;person.stream().filter(x -&gt; x.getGender().equals(Gender.FEMALE)).collect(Collectors.toList())&apos;&#x0A;- Original project: &apos;SpringBootTemplate 2&apos;&#x0A;- Variable name: &apos;collect&apos;&#x0A;- Destination method: &apos;com.sri.project.Practice.main()&apos;&#x0A;- Variable expression: &apos;person.stream().filter(x -&gt; x.getGender().equals(Gender.FEMALE)).collect(Collectors.toList())&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;collect&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src\/main\/java=/optional=/true=/=/maven.pomderived=/true=/&lt;com.sri.project{Practice.java" name="collect" replace="true" selection="756 94" stamp="1618168818579" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;named&apos; from expression &apos;person.stream().sorted(Comparator.comparing(Person::getName)).collect(Collectors.toList())&apos;&#x0A;- Original project: &apos;SpringBootTemplate 2&apos;&#x0A;- Variable name: &apos;named&apos;&#x0A;- Destination method: &apos;com.sri.project.Practice.main()&apos;&#x0A;- Variable expression: &apos;person.stream().sorted(Comparator.comparing(Person::getName)).collect(Collectors.toList())&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;named&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src\/main\/java=/optional=/true=/=/maven.pomderived=/true=/&lt;com.sri.project{Practice.java" name="named" replace="true" selection="995 91" stamp="1618169126637" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;max&apos; from expression &apos;person.stream().max(Comparator.comparing(Person::getAge))&apos;&#x0A;- Original project: &apos;SpringBootTemplate 2&apos;&#x0A;- Variable name: &apos;max&apos;&#x0A;- Destination method: &apos;com.sri.project.Practice.main()&apos;&#x0A;- Variable expression: &apos;person.stream().max(Comparator.comparing(Person::getAge))&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;max&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src\/main\/java=/optional=/true=/=/maven.pomderived=/true=/&lt;com.sri.project{Practice.java" name="max" replace="true" selection="1151 58" stamp="1618169377632" varType="false" version="1.0"/>&#x0A;&#x0A;&#x0A;<refactoring comment="Extract local variable &apos;collect&apos; from expression &apos;list.stream().filter(x -&gt; x.contains(&quot;e&quot;)).collect(Collectors.toList())&apos;&#x0A;- Original project: &apos;SpringBootTemplate 2&apos;&#x0A;- Variable name: &apos;collect&apos;&#x0A;- Destination method: &apos;com.sri.computerProject.StreamsExample.main()&apos;&#x0A;- Variable expression: &apos;list.stream().filter(x -&gt; x.contains(&quot;e&quot;)).collect(Collectors.toList())&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;collect&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src\/main\/java=/optional=/true=/=/maven.pomderived=/true=/&lt;com.sri.computerProject{StreamsExample.java" name="collect" replace="true" selection="678 72" stamp="1618619787767" varType="false" version="1.0"/>
</session>