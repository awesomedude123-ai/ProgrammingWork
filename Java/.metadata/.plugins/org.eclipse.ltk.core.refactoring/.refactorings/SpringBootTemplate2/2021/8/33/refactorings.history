<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">&#x0A;<refactoring comment="Extract local variable &apos;collect&apos; from expression &apos;array1.stream().filter(x -&gt; x.equals(&quot; &quot;) == true).collect(Collectors.toList())&apos;&#x0A;- Original project: &apos;SpringBootTemplate2&apos;&#x0A;- Variable name: &apos;collect&apos;&#x0A;- Destination method: &apos;com.sri.hackerrank.JavaStringTokens.main(...)&apos;&#x0A;- Variable expression: &apos;array1.stream().filter(x -&gt; x.equals(&quot; &quot;) == true).collect(Collectors.toList())&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;collect&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src\/main\/java=/optional=/true=/=/maven.pomderived=/true=/&lt;com.sri.hackerrank{JavaStringTokens.java" name="collect" replace="true" selection="1506 78" stamp="1628777776809" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;collect&apos; from expression &apos;array1.stream().filter(x -&gt; x.equals(&quot;&quot;) == false).collect(Collectors.toList())&apos;&#x0A;- Original project: &apos;SpringBootTemplate2&apos;&#x0A;- Variable name: &apos;collect&apos;&#x0A;- Destination method: &apos;com.sri.hackerrank.JavaStringTokens.main(...)&apos;&#x0A;- Variable expression: &apos;array1.stream().filter(x -&gt; x.equals(&quot;&quot;) == false).collect(Collectors.toList())&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;collect&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src\/main\/java=/optional=/true=/=/maven.pomderived=/true=/&lt;com.sri.hackerrank{JavaStringTokens.java" name="collect" replace="true" selection="1529 79" stamp="1628777886252" varType="false" version="1.0"/>
</session>